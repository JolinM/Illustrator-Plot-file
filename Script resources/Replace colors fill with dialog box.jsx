// Global Variablesvar aSel,bSel // Main Window Dialogfunction csDialog() {          var fabGroup = app.activeDocument.swatchGroups.getByName('Fabrics');          var allFabs = fabGroup.getAllSwatches();          var fabNames = Array();          for (var i = 0; i < allFabs.length; i++) {                    fabNames.push(allFabs[i].name);                     if (i < allFabs.length-1) fabNames.push('-');               }      var csdlg = new Window('dialog', 'Tim\'s Fabric Picker…',[0,0,300,205]);          // Panel 1     csdlg.Pnl = csdlg.add('panel', [15,15,285,72], 'Pick your "Primary" fabric swap:');          csdlg.Pnl.cs1 = csdlg.Pnl.add('dropdownlist', [15,20,255,37], fabNames);          // Panel 2     csdlg.Pn2 = csdlg.add('panel', [15,92,285,149], 'Pick your "Secondary" fabric swap:');          csdlg.Pn2.cs3 = csdlg.Pn2.add('dropdownlist', [15,20,255,37], fabNames);          // Standard Buttons          csdlg.cancelBtn = csdlg.add('button', [15,164,125,186], 'Cancel', {name:'cancel'});          csdlg.okBtn = csdlg.add('button', [175,164,285,186], 'OK', {name:'ok'});          // Panel 1 call backs     csdlg.Pnl.cs1.onChange = function() {          aSel = csdlg.Pnl.cs1.items[parseInt(this.selection)];     }          // Panel 2 call back     csdlg.Pn2.cs3.onChange = function() {          bSel = csdlg.Pn2.cs3.items[parseInt(this.selection)];     }          // Button call back     csdlg.okBtn.onClick = function() {                    csdlg.close(1);                    colourSwapper(aSel,bSel); // Here call the process               }          csdlg.center();          csdlg.show();     }  // Main active document commands go here function colourSwapper(a,b) {          var uIL = app.userInteractionLevel;          app.userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;          var docRef = app.activeDocument;          recurseLayers(docRef.layers);          alert('Now run Action:\r"Delete Unused Panel Items"');          app.userInteractionLevel = uIL;}  // Main active document check functionfunction activeDoc() {          if (app.documents.length == 0) {                    alert('NO document open?');           return;      } else {                    csDialog();               }     } activeDoc();  function recurseLayers(objArray) {      for (var i = 0; i < objArray.length; i++) {                    var l = objArray[i].locked;          if (l) objArray[i].locked = false;                    var v = objArray[i].visible;          if (!v) objArray[i].visible = true;                    changeText(objArray[i].textFrames);                    changeColours(objArray[i].pathItems);                    if (objArray[i].layers.length > 0) {               recurseLayers(objArray[i].layers)          }                    if (objArray[i].groupItems.length > 0) {               recurseGroups(objArray[i].groupItems)          }               if (objArray[i].compoundPathItems.length > 0) {               loopCompounds(objArray[i].compoundPathItems)          }                    objArray[i].locked = l;          objArray[i].visible = v;     }};  function recurseGroups(objArray) {      for (var i = 0; i < objArray.length; i++) {                    var l = objArray[i].locked;          if (l) objArray[i].locked = false;                    var h = objArray[i].hidden;          if (h) objArray[i].hidden = false;                    changeText(objArray[i].textFrames);                    changeColours(objArray[i].pathItems);                    if (objArray[i].groupItems.length > 0) {               recurseGroups(objArray[i].groupItems)          }               if (objArray[i].compoundPathItems.length > 0) {               loopCompounds(objArray[i].compoundPathItems)          }                    objArray[i].locked = l;          objArray[i].hidden = h;               }};  function loopCompounds(objArray) {      for (var i = 0; i < objArray.length; i++) {                    var l = objArray[i].locked;          if (l) objArray[i].locked = false;                    var h = objArray[i].hidden;          if (h) objArray[i].hidden = false;                    changeColours(objArray[i].pathItems);                         objArray[i].locked = l;          objArray[i].hidden = h;               }};  function changeColours(objArray) {          for (var i = objArray.length-1; i >= 0; i--) {                    var l = objArray[i].locked;          if (l) objArray[i].locked = false;                    var h = objArray[i].hidden;          if (h) objArray[i].hidden = false;                    if (objArray[i].fillColor instanceof SpotColor) {                         if (objArray[i].fillColor.spot.name == 'Primary') {                    objArray[i].fillColor = app.activeDocument.swatches.getByName(aSel).color;               }                    if (objArray[i].fillColor.spot.name == 'Secondary') {                    objArray[i].fillColor = app.activeDocument.swatches.getByName(bSel).color;               }          }                    objArray[i].locked = l;          objArray[i].hidden = h;      }};  function changeText(objArray) {          for (var i = objArray.length-1; i >= 0; i--) {                    var l = objArray[i].locked;          if (l) objArray[i].locked = false;                    var h = objArray[i].hidden;          if (h) objArray[i].hidden = false;                    if (/Primary/.test(objArray[i].contents)) {               objArray[i].contents = objArray[i].contents.replace('Primary', aSel)          }               if (/Secondary/.test(objArray[i].contents)) {               objArray[i].contents = objArray[i].contents.replace('Secondary', bSel)          }                    objArray[i].locked = l;          objArray[i].hidden = h;      }};