activeDoc();function activeDoc() {    if (app.documents.length == 0) {        alert('No document open');        return;    } else {        colourSwapper();    }}function colourSwapper(a, b) {    var uIL = app.userInteractionLevel;    app.userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;    var docRef = app.activeDocument;    recurseLayers(docRef.layers);    alert('Now run Action:\r"Delete Unused Panel Items"');    app.userInteractionLevel = uIL;}function recurseLayers(objArray) {    for (var i = 0; i < objArray.length; i++) {        var l = objArray[i].locked;        if (l) objArray[i].locked = false;        var v = objArray[i].visible;        if (!v) objArray[i].visible = true;        changeText(objArray[i].textFrames);        changeColours(objArray[i].pathItems);        if (objArray[i].layers.length > 0) {            recurseLayers(objArray[i].layers)        }        if (objArray[i].groupItems.length > 0) {            recurseGroups(objArray[i].groupItems)        }        if (objArray[i].compoundPathItems.length > 0) {            loopCompounds(objArray[i].compoundPathItems)        }        objArray[i].locked = l;        objArray[i].visible = v;    }};function recurseGroups(objArray) {    for (var i = 0; i < objArray.length; i++) {        var l = objArray[i].locked;        if (l) objArray[i].locked = false;        var h = objArray[i].hidden;        if (h) objArray[i].hidden = false;        changeText(objArray[i].textFrames);        changeColours(objArray[i].pathItems);        if (objArray[i].groupItems.length > 0) {            recurseGroups(objArray[i].groupItems)        }        if (objArray[i].compoundPathItems.length > 0) {            loopCompounds(objArray[i].compoundPathItems)        }        objArray[i].locked = l;        objArray[i].hidden = h;    }};function loopCompounds(objArray) {    for (var i = 0; i < objArray.length; i++) {        var l = objArray[i].locked;        if (l) objArray[i].locked = false;        var h = objArray[i].hidden;        if (h) objArray[i].hidden = false;        changeColours(objArray[i].pathItems);        objArray[i].locked = l;        objArray[i].hidden = h;    }};function changeColours(objArray) {    for (var i = objArray.length - 1; i >= 0; i--) {        var l = objArray[i].locked;        if (l) objArray[i].locked = false;        var h = objArray[i].hidden;        if (h) objArray[i].hidden = false;        if (objArray[i].strokeColor instanceof SpotColor) {            if (objArray[i].strokeColor.spot.name == 'Oui') {                objArray[i].strokeColor = app.activeDocument.swatches.getByName('Black').color;            }            if (objArray[i].strokeColor.spot.name == 'Non') {                objArray[i].strokeColor = app.activeDocument.swatches.getByName('Black').color;            }        }        objArray[i].locked = l;        objArray[i].hidden = h;    }};function changeText(objArray) {    for (var i = objArray.length - 1; i >= 0; i--) {        var l = objArray[i].locked;        if (l) objArray[i].locked = false;        var h = objArray[i].hidden;        if (h) objArray[i].hidden = false;        if (/Primary/.test(objArray[i].contents)) {            objArray[i].contents = objArray[i].contents.replace('Oui', 'Black')        }        if (/Secondary/.test(objArray[i].contents)) {            objArray[i].contents = objArray[i].contents.replace('Non', 'BLack')        }        objArray[i].locked = l;        objArray[i].hidden = h;    }}