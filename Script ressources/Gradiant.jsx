if ( app.documents.length > 0 && app.activeDocument.pathItems.length > 0)      {          if(app.activeDocument.documentColorSpace == DocumentColorSpace.CMYK)          {              convertToGrad();          }          else          {              alert("Document Color Space is not CMYK. Change the Document Color Mode to CMYK Mode", "CMYK Document required");          }        }//end main if        else      {          alert("Either no document is available or the document is empty");      }        function convertToGrad() {        var items = selection;      var totalSelected = items.length;        if(totalSelected > 0)      {      var gShift = Math.round(prompt("Enter a value for gradient shift","10","Gradient Shift"));      if(gShift == null || gShift <=0) gShift=0;      if(gShift >=100) gShift =100;        var gradAngle = prompt("Vector angle for Gradient","0.0","Gradient Angle")      if(gradAngle == null) gradAngle=0;        for(var j=0; j < totalSelected; j++)      {          var currentObject = app.activeDocument.selection[j];          if(currentObject.typename != "CompoundPathItem" && currentObject.typename != "GroupItem")              {              if(currentObject.filled==true &&              currentObject.fillColor.typename != "GradientColor" &&              currentObject.fillColor.typename != "PatternColor" &&              currentObject.fillColor.typename != "SpotColor" &&              currentObject.fillColor.typename != "GrayColor"              )                  {                    var currentColor = currentObject.fillColor;                  var currentCyan = Math.round(currentColor.cyan);                  var currentMagenta = Math.round(currentColor.magenta);                  var currentYellow = Math.round(currentColor.yellow);                  var currentBlack = Math.round(currentColor.black);                    // Create a color for both ends of the gradient                  var startColor = new CMYKColor();                  var endColor = new CMYKColor();                    if(currentCyan < gShift)                      startColor.cyan = 0;                  else                      startColor.cyan = currentCyan - gShift;                    if(currentMagenta < gShift)                      startColor.magenta = 0;                  else                      startColor.magenta = currentMagenta - gShift;                    if(currentYellow < gShift)                      startColor.yellow = 0;                  else                      startColor.yellow = currentYellow - gShift;                    if(currentBlack < gShift)                      startColor.black= 0;                  else                      startColor.black = currentBlack - gShift;                    gShiftEnd = 100 - gShift;                    if(currentCyan > gShiftEnd)                      endColor.cyan = 100;                  else                      endColor.cyan = currentCyan + gShift;                    if(currentMagenta > gShiftEnd)                      endColor.magenta = 100;                  else                      endColor.magenta = currentMagenta + gShift;                    if(currentYellow > gShiftEnd)                      endColor.yellow = 100;                  else                      endColor.yellow = currentYellow + gShift;                    if(currentBlack > gShiftEnd)                      endColor.black = 100;                  else                      endColor.black = currentBlack + gShift;    var newGradient = app.activeDocument.gradients.add();  newGradient.type = GradientType.LINEAR;  // Modify the first gradient stop  newGradient.gradientStops[0].rampPoint = 0;  newGradient.gradientStops[0].midPoint = 50;  newGradient.gradientStops[0].color = startColor;    // Modify the last gradient stop  newGradient.gradientStops[1].rampPoint = 100;  newGradient.gradientStops[1].color = endColor;  // construct an Illustrator.GradientColor object referring to the  // newly created gradient  var colorOfGradient= new GradientColor();  colorOfGradient.gradient = newGradient;  // get current path item, apply new gradient as its fill  currentObject.fillColor = colorOfGradient;  currentObject.rotate(gradAngle, false, false, true, false, Transformation.CENTER);              } //endif                else              {                  alert("Fill an object with CMYK color. Any objects containing\ngradients, patterns, spot colors or empty fills will be omitted."," Only CMYK Colors Allowed");              }          }            else          {              alert("This script only works with Non-Compound Objects or Isolated Group items.\nAny items with Groups or Compound Objects will be omitted.", "Ungroup or Isolate the Group Items");            }        }//endfor      }//end selected      else      {          alert("Please select atleast one object");          }      }  